version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: tur_postgres
    environment:
      POSTGRES_DB: tur_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tur_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Rails Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tur_backend
    environment:
      - RAILS_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/tur_development
      - REDIS_URL=redis://redis:6379/0
      - OBS_API_URL=https://test-v2.obs.md
      - OBS_API_EMAIL=${OBS_API_EMAIL}
      - OBS_API_PASSWORD=${OBS_API_PASSWORD}
      - RUBYOPT=--yjit
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - backend_gems:/usr/local/bundle
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        bundle install &&
        rails db:create db:migrate db:seed &&
        bundle exec sidekiq &
        rails server -b 0.0.0.0
      "

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tur_frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - VITE_API_URL=http://localhost:3000/api
    command: npm run dev -- --host 0.0.0.0

  # Sidekiq Background Jobs
  sidekiq:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tur_sidekiq
    environment:
      - RAILS_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/tur_development
      - REDIS_URL=redis://redis:6379/0
      - OBS_API_URL=https://test-v2.obs.md
      - OBS_API_EMAIL=${OBS_API_EMAIL}
      - OBS_API_PASSWORD=${OBS_API_PASSWORD}
      - RUBYOPT=--yjit
    volumes:
      - ./backend:/app
      - backend_gems:/usr/local/bundle
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        bundle install &&
        bundle exec sidekiq
      "

volumes:
  postgres_data:
  redis_data:
  backend_gems:
  frontend_node_modules:
