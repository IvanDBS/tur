// Removed unused import: ref
import { useNotifications } from './useNotifications'
import { useCalendarHints } from './useCalendarHints'
import { logger } from '../utils/logger'
import type { SearchForm, SelectedFilters } from '../types/search'

export const useSearchValidation = () => {
  const { showError } = useNotifications()
  const calendarHints = useCalendarHints()

  const validateSearchForm = (
    searchForm: SearchForm,
    selectedFilters: SelectedFilters
  ): boolean => {
    logger.debug('üîç Validating search form fields:', {
      departureCity: searchForm.departureCity?.id,
      destination: searchForm.destination?.id,
      package: searchForm.package?.id,
      arrivalCity: searchForm.arrivalCity?.id,
      checkInDate: searchForm.checkInDate,
      checkOutDate: searchForm.checkOutDate,
      nights: searchForm.nights,
      nights2: searchForm.nights2,
      children: searchForm.children,
      selectedHotels: selectedFilters.hotels.length,
      selectedHotelsArray: selectedFilters.hotels
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!searchForm.departureCity?.id) {
      logger.debug('‚ùå Missing departure city')
      showError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞', '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è')
      return false
    }
    if (!searchForm.destination?.id) {
      logger.debug('‚ùå Missing destination')
      showError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞', '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è')
      return false
    }
    if (!searchForm.package?.id) {
      logger.debug('‚ùå Missing package')
      showError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞', '–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç —Ç—É—Ä–∞')
      return false
    }
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ä–æ–¥ –ø—Ä–∏–ª–µ—Ç–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–∞–∫–µ—Ç–æ–≤ —Å –ø–µ—Ä–µ–ª–µ—Ç–æ–º
    const isPackageWithoutFlight = !searchForm.package?.airports || searchForm.package.airports.length === 0
    if (!isPackageWithoutFlight && !searchForm.arrivalCity?.id) {
      logger.debug('‚ùå Missing arrival city for flight package')
      showError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞', '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –ø—Ä–∏–ª–µ—Ç–∞')
      return false
    }
    if (!searchForm.checkInDate) {
      logger.debug('‚ùå Missing check-in date')
      showError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞', '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∑–∞–µ–∑–¥–∞')
      return false
    }
    if (!searchForm.checkOutDate) {
      logger.debug('‚ùå Missing check-out date')
      showError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞', '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–∞—Ç—É –∑–∞—Å–µ–ª–µ–Ω–∏—è')
      return false
    }
    if (!searchForm.nights) {
      logger.debug('‚ùå Missing nights')
      showError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞', '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—á–µ–π')
      return false
    }
    if (!searchForm.nights2) {
      logger.debug('‚ùå Missing nights2')
      showError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞', '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—á–µ–π')
      return false
    }
    if (searchForm.children === null) {
      logger.debug('‚ùå Missing children count')
      showError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞', '–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å "–ë–µ–∑ –¥–µ—Ç–µ–π")')
      return false
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω—ã –æ—Ç–µ–ª–∏ –∏–ª–∏ –æ–ø—Ü–∏—è "–õ—é–±–æ–π"
    logger.debug('üîç Checking hotels selection:', {
      selectedFiltersHotels: selectedFilters.hotels,
      selectedFiltersHotelsLength: selectedFilters.hotels.length,
      selectedFiltersHotelsType: typeof selectedFilters.hotels,
      selectedFiltersHotelsIsArray: Array.isArray(selectedFilters.hotels),
      selectedFiltersHotelsContent: selectedFilters.hotels
    })
    
    // –£–±–∏—Ä–∞–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –æ—Ç–µ–ª–µ–π - –µ—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã, –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ
    // if (selectedFilters.hotels.length === 0) {
    //   logger.debug('‚ùå No hotels selected')
    //   showError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞', '–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–µ–ª–∏ –∏–ª–∏ –æ–ø—Ü–∏—é "–õ—é–±–æ–π" –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ö')
    //   return false
    // }

    logger.debug('‚úÖ All search form validations passed')
    return true
  }

  const validateDates = (searchForm: SearchForm): boolean => {
    const { isDateAvailable, availableDates, calendarHints: calendarHintsData } = calendarHints

    logger.debug('üîç Validating dates:', {
      checkInDate: searchForm.checkInDate,
      checkOutDate: searchForm.checkOutDate,
      availableDatesCount: availableDates.value.length,
      calendarHintsKeys: Object.keys(calendarHintsData.value),
      calendarHintsLength: Object.keys(calendarHintsData.value).length
    })

    if (!searchForm.checkInDate || !searchForm.checkOutDate) {
      logger.debug('‚ùå Missing dates')
      return false
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞—Ç –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
    const calendarHintsKeys = Object.keys(calendarHintsData.value)
    if (calendarHintsKeys.length === 0) {
      logger.debug('‚úÖ No calendar hints, skipping date validation')
      return true
    }

    if (!isDateAvailable(searchForm.checkInDate)) {
      logger.debug('‚ùå Check-in date not available')
      showError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞', '–í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –∑–∞–µ–∑–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è')
      return false
    }

    if (!isDateAvailable(searchForm.checkOutDate)) {
      logger.debug('‚ùå Check-out date not available')
      showError('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞', '–í—ã–±—Ä–∞–Ω–Ω–∞—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –∑–∞—Å–µ–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è')
      return false
    }

    logger.debug('‚úÖ All date validations passed')
    return true
  }

  return {
    validateSearchForm,
    validateDates
  }
}
